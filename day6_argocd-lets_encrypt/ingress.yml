apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx-controller-class
  namespace: argocd
spec:
  controller: k8s.io/ingress-nginx
---


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: argocd
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    # If you encounter a redirect loop or are getting a 307 response code
    # then you need to force the nginx ingress to connect to the backend using HTTPS.
    #
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  ingressClassName: nginx-controller-class
  rules:
  - host: lucky.sandbox.aws.teamwork.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              name: https
  tls:
  - hosts:
    - lucky.sandbox.aws.teamwork.net
    secretName: argocd-secret # do not change, this is provided by Argo CD
---


# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: matomi-certicate-tls
#   namespace: argocd
# spec:
#   issuerRef:
#     name: matomi-lets-encrypt
#   dnsNames:
#   - eml.sandbox.aws.teamwork.net
#   secretName: matomi-secret-key 